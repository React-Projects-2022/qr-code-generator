{"version":3,"sources":["App.js","index.js"],"names":["App","useState","temp","setTemp","text","setText","size","setSize","bgColor","setBgColor","qrCode","setQrCode","PRINCIPAL_URL","useEffect","className","type","autoFocus","onChange","e","target","value","placeholder","onClick","substring","min","max","src","alt","concat","href","download","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLA4EeA,MAzEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,KAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA8BN,mBAAS,UAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KACMC,EAAa,oDAgBnB,OAZAC,qBAAU,WACRF,EAAU,GAAD,OACJC,GADI,OACYR,EADZ,kBAC0BE,EAD1B,YACkCA,EADlC,oBACkDE,MAE1D,CAACJ,EAAME,EAAME,EAASI,IASvB,sBAAKE,UAAU,MAAf,UACE,mDACA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,uBACEC,KAAK,OACLC,WAAW,EACXC,SAAU,SAACC,GACTf,EAAQe,EAAEC,OAAOC,QAEnBC,YAAY,yBAEd,wBAAQP,UAAU,SAASQ,QAjBnC,WACEjB,EAAQH,IAgBF,yBAIF,sBAAKY,UAAU,QAAf,UACE,mDACA,uBACEC,KAAK,QACLE,SAAU,SAACC,GACTT,EAAWS,EAAEC,OAAOC,MAAMG,UAAU,OAGxC,4CACA,uBACER,KAAK,QACLS,IAAI,MACJC,IAAI,MACJL,MAAOd,EACPW,SAAU,SAACC,GACTX,EAAQW,EAAEC,OAAOC,gBAKzB,sBAAKN,UAAU,aAAf,UACE,qBAAKY,IAAKhB,EAAQiB,IAAK,sBAAsBC,OAAOxB,KACpD,mBACEyB,KAAMnB,EACNoB,UAAQ,EAACX,OAAO,SAChBY,IAAI,aAHN,SAKE,wBAAQhB,KAAK,SAAb,+BCjEViB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1cdbb9b3.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./index.css\";\n\nfunction App() {\n  const [temp, setTemp] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [size, setSize] = useState(400);\n  const [bgColor, setBgColor] = useState(\"ffffff\");\n  const [qrCode, setQrCode] = useState(\"\");\n  const PRINCIPAL_URL = `https://api.qrserver.com/v1/create-qr-code/?data=`;\n\n  // Changing the URL only when the user\n  // changes the input\n  useEffect(() => {\n    setQrCode(\n      `${PRINCIPAL_URL}${text}!&size=${size}x${size}&bgcolor=${bgColor}`\n    );\n  }, [text, size, bgColor, PRINCIPAL_URL]);\n\n  // Updating the input text when user\n  // click on the generate button\n  function handleClick() {\n    setText(temp);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>QR Code Generator</h1>\n      <div className=\"input-box\">\n        <div className=\"gen\">\n          <input\n            type=\"text\"\n            autoFocus={true}\n            onChange={(e) => {\n              setTemp(e.target.value);\n            }}\n            placeholder=\"Enter text to encode\"\n          />\n          <button className=\"button\" onClick={handleClick}>\n            Generate\n          </button>\n        </div>\n        <div className=\"extra\">\n          <h5>Background Color:</h5>\n          <input\n            type=\"color\"\n            onChange={(e) => {\n              setBgColor(e.target.value.substring(1));\n            }}\n          />\n          <h5>Dimension:</h5>\n          <input\n            type=\"range\"\n            min=\"200\"\n            max=\"600\"\n            value={size}\n            onChange={(e) => {\n              setSize(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"output-box\">\n        <img src={qrCode} alt={\"QR Code Image with \".concat(text)} />\n        <a\n          href={qrCode}\n          download target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <button type=\"button\">Download</button>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}